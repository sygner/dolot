// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.29.3
// source: proto/protos/game/user.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GameIds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *GameIds) Reset() {
	*x = GameIds{}
	mi := &file_proto_protos_game_user_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameIds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameIds) ProtoMessage() {}

func (x *GameIds) ProtoReflect() protoreflect.Message {
	mi := &file_proto_protos_game_user_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameIds.ProtoReflect.Descriptor instead.
func (*GameIds) Descriptor() ([]byte, []int) {
	return file_proto_protos_game_user_proto_rawDescGZIP(), []int{0}
}

func (x *GameIds) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

// Message representing the request to add a user's choice
type AddUserChoiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId             int32                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                      // User's ID
	GameId             string                `protobuf:"bytes,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`                                       // Game ID
	ChosenMainNumbers  []*ChosenMainNumbers  `protobuf:"bytes,3,rep,name=chosen_main_numbers,json=chosenMainNumbers,proto3" json:"chosen_main_numbers,omitempty"`    // List of main numbers chosen by the user
	ChosenBonusNumbers []*ChosenBonusNumbers `protobuf:"bytes,4,rep,name=chosen_bonus_numbers,json=chosenBonusNumbers,proto3" json:"chosen_bonus_numbers,omitempty"` // List of bonus numbers chosen by the user
	ShouldReturn       bool                  `protobuf:"varint,5,opt,name=should_return,json=shouldReturn,proto3" json:"should_return,omitempty"`                    // Should return the created choice
}

func (x *AddUserChoiceRequest) Reset() {
	*x = AddUserChoiceRequest{}
	mi := &file_proto_protos_game_user_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddUserChoiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserChoiceRequest) ProtoMessage() {}

func (x *AddUserChoiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_protos_game_user_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserChoiceRequest.ProtoReflect.Descriptor instead.
func (*AddUserChoiceRequest) Descriptor() ([]byte, []int) {
	return file_proto_protos_game_user_proto_rawDescGZIP(), []int{1}
}

func (x *AddUserChoiceRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddUserChoiceRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *AddUserChoiceRequest) GetChosenMainNumbers() []*ChosenMainNumbers {
	if x != nil {
		return x.ChosenMainNumbers
	}
	return nil
}

func (x *AddUserChoiceRequest) GetChosenBonusNumbers() []*ChosenBonusNumbers {
	if x != nil {
		return x.ChosenBonusNumbers
	}
	return nil
}

func (x *AddUserChoiceRequest) GetShouldReturn() bool {
	if x != nil {
		return x.ShouldReturn
	}
	return false
}

// Message for chosen main numbers
type ChosenMainNumbers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChosenMainNumbers []int32 `protobuf:"varint,1,rep,packed,name=chosen_main_numbers,json=chosenMainNumbers,proto3" json:"chosen_main_numbers,omitempty"` // Each set of main numbers (array of 7 integers)
}

func (x *ChosenMainNumbers) Reset() {
	*x = ChosenMainNumbers{}
	mi := &file_proto_protos_game_user_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChosenMainNumbers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChosenMainNumbers) ProtoMessage() {}

func (x *ChosenMainNumbers) ProtoReflect() protoreflect.Message {
	mi := &file_proto_protos_game_user_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChosenMainNumbers.ProtoReflect.Descriptor instead.
func (*ChosenMainNumbers) Descriptor() ([]byte, []int) {
	return file_proto_protos_game_user_proto_rawDescGZIP(), []int{2}
}

func (x *ChosenMainNumbers) GetChosenMainNumbers() []int32 {
	if x != nil {
		return x.ChosenMainNumbers
	}
	return nil
}

// Message for chosen bonus numbers
type ChosenBonusNumbers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChosenBonusNumbers []int32 `protobuf:"varint,1,rep,packed,name=chosen_bonus_numbers,json=chosenBonusNumbers,proto3" json:"chosen_bonus_numbers,omitempty"` // Each set of bonus numbers (array of 7 integers)
}

func (x *ChosenBonusNumbers) Reset() {
	*x = ChosenBonusNumbers{}
	mi := &file_proto_protos_game_user_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChosenBonusNumbers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChosenBonusNumbers) ProtoMessage() {}

func (x *ChosenBonusNumbers) ProtoReflect() protoreflect.Message {
	mi := &file_proto_protos_game_user_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChosenBonusNumbers.ProtoReflect.Descriptor instead.
func (*ChosenBonusNumbers) Descriptor() ([]byte, []int) {
	return file_proto_protos_game_user_proto_rawDescGZIP(), []int{3}
}

func (x *ChosenBonusNumbers) GetChosenBonusNumbers() []int32 {
	if x != nil {
		return x.ChosenBonusNumbers
	}
	return nil
}

// Message representing a UserChoice
type UserChoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                             // Unique ID for this choice
	UserId             int32                 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                      // User ID
	GameId             string                `protobuf:"bytes,3,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`                                       // Game ID
	ChosenMainNumbers  []*ChosenMainNumbers  `protobuf:"bytes,4,rep,name=chosen_main_numbers,json=chosenMainNumbers,proto3" json:"chosen_main_numbers,omitempty"`    // Main numbers chosen
	ChosenBonusNumbers []*ChosenBonusNumbers `protobuf:"bytes,5,rep,name=chosen_bonus_numbers,json=chosenBonusNumbers,proto3" json:"chosen_bonus_numbers,omitempty"` // Bonus numbers chosen
	CreatedAt          string                `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *UserChoice) Reset() {
	*x = UserChoice{}
	mi := &file_proto_protos_game_user_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserChoice) ProtoMessage() {}

func (x *UserChoice) ProtoReflect() protoreflect.Message {
	mi := &file_proto_protos_game_user_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserChoice.ProtoReflect.Descriptor instead.
func (*UserChoice) Descriptor() ([]byte, []int) {
	return file_proto_protos_game_user_proto_rawDescGZIP(), []int{4}
}

func (x *UserChoice) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserChoice) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserChoice) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *UserChoice) GetChosenMainNumbers() []*ChosenMainNumbers {
	if x != nil {
		return x.ChosenMainNumbers
	}
	return nil
}

func (x *UserChoice) GetChosenBonusNumbers() []*ChosenBonusNumbers {
	if x != nil {
		return x.ChosenBonusNumbers
	}
	return nil
}

func (x *UserChoice) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

// Message for handling multiple user choices (if needed)
type UserChoices struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserChoices []*UserChoice `protobuf:"bytes,1,rep,name=user_choices,json=userChoices,proto3" json:"user_choices,omitempty"` // Collection of user choices
	Total       *int32        `protobuf:"varint,2,opt,name=total,proto3,oneof" json:"total,omitempty"`
}

func (x *UserChoices) Reset() {
	*x = UserChoices{}
	mi := &file_proto_protos_game_user_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserChoices) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserChoices) ProtoMessage() {}

func (x *UserChoices) ProtoReflect() protoreflect.Message {
	mi := &file_proto_protos_game_user_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserChoices.ProtoReflect.Descriptor instead.
func (*UserChoices) Descriptor() ([]byte, []int) {
	return file_proto_protos_game_user_proto_rawDescGZIP(), []int{5}
}

func (x *UserChoices) GetUserChoices() []*UserChoice {
	if x != nil {
		return x.UserChoices
	}
	return nil
}

func (x *UserChoices) GetTotal() int32 {
	if x != nil && x.Total != nil {
		return *x.Total
	}
	return 0
}

type GetUserChoicesByUserIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     int32       `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Pagination *Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetUserChoicesByUserIdRequest) Reset() {
	*x = GetUserChoicesByUserIdRequest{}
	mi := &file_proto_protos_game_user_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserChoicesByUserIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserChoicesByUserIdRequest) ProtoMessage() {}

func (x *GetUserChoicesByUserIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_protos_game_user_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserChoicesByUserIdRequest.ProtoReflect.Descriptor instead.
func (*GetUserChoicesByUserIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_protos_game_user_proto_rawDescGZIP(), []int{6}
}

func (x *GetUserChoicesByUserIdRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUserChoicesByUserIdRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetUserChoicesByGameIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId     string      `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Pagination *Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetUserChoicesByGameIdRequest) Reset() {
	*x = GetUserChoicesByGameIdRequest{}
	mi := &file_proto_protos_game_user_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserChoicesByGameIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserChoicesByGameIdRequest) ProtoMessage() {}

func (x *GetUserChoicesByGameIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_protos_game_user_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserChoicesByGameIdRequest.ProtoReflect.Descriptor instead.
func (*GetUserChoicesByGameIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_protos_game_user_proto_rawDescGZIP(), []int{7}
}

func (x *GetUserChoicesByGameIdRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *GetUserChoicesByGameIdRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetUserChoicesByUserIdAndTimeRangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime string `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   string `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	UserId    int32  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetUserChoicesByUserIdAndTimeRangeRequest) Reset() {
	*x = GetUserChoicesByUserIdAndTimeRangeRequest{}
	mi := &file_proto_protos_game_user_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserChoicesByUserIdAndTimeRangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserChoicesByUserIdAndTimeRangeRequest) ProtoMessage() {}

func (x *GetUserChoicesByUserIdAndTimeRangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_protos_game_user_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserChoicesByUserIdAndTimeRangeRequest.ProtoReflect.Descriptor instead.
func (*GetUserChoicesByUserIdAndTimeRangeRequest) Descriptor() ([]byte, []int) {
	return file_proto_protos_game_user_proto_rawDescGZIP(), []int{8}
}

func (x *GetUserChoicesByUserIdAndTimeRangeRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *GetUserChoicesByUserIdAndTimeRangeRequest) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *GetUserChoicesByUserIdAndTimeRangeRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

var File_proto_protos_game_user_proto protoreflect.FileDescriptor

var file_proto_protos_game_user_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x67,
	0x61, 0x6d, 0x65, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04,
	0x67, 0x61, 0x6d, 0x65, 0x1a, 0x1e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1b, 0x0a, 0x07, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64,
	0x73, 0x22, 0x82, 0x02, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x6f,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x47, 0x0a, 0x13,
	0x63, 0x68, 0x6f, 0x73, 0x65, 0x6e, 0x5f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x2e, 0x43, 0x68, 0x6f, 0x73, 0x65, 0x6e, 0x4d, 0x61, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x52, 0x11, 0x63, 0x68, 0x6f, 0x73, 0x65, 0x6e, 0x4d, 0x61, 0x69, 0x6e, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x4a, 0x0a, 0x14, 0x63, 0x68, 0x6f, 0x73, 0x65, 0x6e, 0x5f,
	0x62, 0x6f, 0x6e, 0x75, 0x73, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x43, 0x68, 0x6f, 0x73, 0x65,
	0x6e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x12, 0x63,
	0x68, 0x6f, 0x73, 0x65, 0x6e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x5f, 0x72, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x22, 0x43, 0x0a, 0x11, 0x43, 0x68, 0x6f, 0x73, 0x65, 0x6e,
	0x4d, 0x61, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x63,
	0x68, 0x6f, 0x73, 0x65, 0x6e, 0x5f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x11, 0x63, 0x68, 0x6f, 0x73, 0x65, 0x6e,
	0x4d, 0x61, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x46, 0x0a, 0x12, 0x43,
	0x68, 0x6f, 0x73, 0x65, 0x6e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x68, 0x6f, 0x73, 0x65, 0x6e, 0x5f, 0x62, 0x6f, 0x6e, 0x75,
	0x73, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x12, 0x63, 0x68, 0x6f, 0x73, 0x65, 0x6e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x22, 0x82, 0x02, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x6f, 0x69,
	0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61,
	0x6d, 0x65, 0x49, 0x64, 0x12, 0x47, 0x0a, 0x13, 0x63, 0x68, 0x6f, 0x73, 0x65, 0x6e, 0x5f, 0x6d,
	0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x43, 0x68, 0x6f, 0x73, 0x65, 0x6e, 0x4d,
	0x61, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x11, 0x63, 0x68, 0x6f, 0x73,
	0x65, 0x6e, 0x4d, 0x61, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x4a, 0x0a,
	0x14, 0x63, 0x68, 0x6f, 0x73, 0x65, 0x6e, 0x5f, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x43, 0x68, 0x6f, 0x73, 0x65, 0x6e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x12, 0x63, 0x68, 0x6f, 0x73, 0x65, 0x6e, 0x42, 0x6f, 0x6e,
	0x75, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x67, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x52,
	0x0b, 0x75, 0x73, 0x65, 0x72, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x22, 0x6a, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x6f, 0x69,
	0x63, 0x65, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6a, 0x0a,
	0x1d, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x42,
	0x79, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7e, 0x0a, 0x29, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x32, 0x97, 0x03, 0x0a, 0x0b, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x0d, 0x41, 0x64, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x23, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x12, 0x68, 0x0a, 0x22, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x42, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x2f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x41, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x11, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x6f,
	0x69, 0x63, 0x65, 0x73, 0x12, 0x5d, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x42, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x41, 0x6e,
	0x64, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65,
	0x73, 0x42, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x11, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x6f, 0x69,
	0x63, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65,
	0x72, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x0c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x1a, 0x0d, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x49, 0x64, 0x73, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_proto_protos_game_user_proto_rawDescOnce sync.Once
	file_proto_protos_game_user_proto_rawDescData = file_proto_protos_game_user_proto_rawDesc
)

func file_proto_protos_game_user_proto_rawDescGZIP() []byte {
	file_proto_protos_game_user_proto_rawDescOnce.Do(func() {
		file_proto_protos_game_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_protos_game_user_proto_rawDescData)
	})
	return file_proto_protos_game_user_proto_rawDescData
}

var file_proto_protos_game_user_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_protos_game_user_proto_goTypes = []any{
	(*GameIds)(nil),                                   // 0: game.GameIds
	(*AddUserChoiceRequest)(nil),                      // 1: game.AddUserChoiceRequest
	(*ChosenMainNumbers)(nil),                         // 2: game.ChosenMainNumbers
	(*ChosenBonusNumbers)(nil),                        // 3: game.ChosenBonusNumbers
	(*UserChoice)(nil),                                // 4: game.UserChoice
	(*UserChoices)(nil),                               // 5: game.UserChoices
	(*GetUserChoicesByUserIdRequest)(nil),             // 6: game.GetUserChoicesByUserIdRequest
	(*GetUserChoicesByGameIdRequest)(nil),             // 7: game.GetUserChoicesByGameIdRequest
	(*GetUserChoicesByUserIdAndTimeRangeRequest)(nil), // 8: game.GetUserChoicesByUserIdAndTimeRangeRequest
	(*Pagination)(nil),                                // 9: game.Pagination
	(*UserId)(nil),                                    // 10: game.UserId
}
var file_proto_protos_game_user_proto_depIdxs = []int32{
	2,  // 0: game.AddUserChoiceRequest.chosen_main_numbers:type_name -> game.ChosenMainNumbers
	3,  // 1: game.AddUserChoiceRequest.chosen_bonus_numbers:type_name -> game.ChosenBonusNumbers
	2,  // 2: game.UserChoice.chosen_main_numbers:type_name -> game.ChosenMainNumbers
	3,  // 3: game.UserChoice.chosen_bonus_numbers:type_name -> game.ChosenBonusNumbers
	4,  // 4: game.UserChoices.user_choices:type_name -> game.UserChoice
	9,  // 5: game.GetUserChoicesByUserIdRequest.pagination:type_name -> game.Pagination
	9,  // 6: game.GetUserChoicesByGameIdRequest.pagination:type_name -> game.Pagination
	1,  // 7: game.UserService.AddUserChoice:input_type -> game.AddUserChoiceRequest
	6,  // 8: game.UserService.GetUserChoicesByUserId:input_type -> game.GetUserChoicesByUserIdRequest
	8,  // 9: game.UserService.GetUserChoicesByUserIdAndTimeRange:input_type -> game.GetUserChoicesByUserIdAndTimeRangeRequest
	7,  // 10: game.UserService.GetUserChoicesByGameIdAndPagination:input_type -> game.GetUserChoicesByGameIdRequest
	10, // 11: game.UserService.GetAllUserGames:input_type -> game.UserId
	4,  // 12: game.UserService.AddUserChoice:output_type -> game.UserChoice
	5,  // 13: game.UserService.GetUserChoicesByUserId:output_type -> game.UserChoices
	5,  // 14: game.UserService.GetUserChoicesByUserIdAndTimeRange:output_type -> game.UserChoices
	5,  // 15: game.UserService.GetUserChoicesByGameIdAndPagination:output_type -> game.UserChoices
	0,  // 16: game.UserService.GetAllUserGames:output_type -> game.GameIds
	12, // [12:17] is the sub-list for method output_type
	7,  // [7:12] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_proto_protos_game_user_proto_init() }
func file_proto_protos_game_user_proto_init() {
	if File_proto_protos_game_user_proto != nil {
		return
	}
	file_proto_protos_game_common_proto_init()
	file_proto_protos_game_user_proto_msgTypes[5].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_protos_game_user_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_protos_game_user_proto_goTypes,
		DependencyIndexes: file_proto_protos_game_user_proto_depIdxs,
		MessageInfos:      file_proto_protos_game_user_proto_msgTypes,
	}.Build()
	File_proto_protos_game_user_proto = out.File
	file_proto_protos_game_user_proto_rawDesc = nil
	file_proto_protos_game_user_proto_goTypes = nil
	file_proto_protos_game_user_proto_depIdxs = nil
}
