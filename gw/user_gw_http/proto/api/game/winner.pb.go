// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.29.3
// source: proto/protos/game/winner.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetWinnerGameByGameId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId string `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
}

func (x *GetWinnerGameByGameId) Reset() {
	*x = GetWinnerGameByGameId{}
	mi := &file_proto_protos_game_winner_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWinnerGameByGameId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWinnerGameByGameId) ProtoMessage() {}

func (x *GetWinnerGameByGameId) ProtoReflect() protoreflect.Message {
	mi := &file_proto_protos_game_winner_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWinnerGameByGameId.ProtoReflect.Descriptor instead.
func (*GetWinnerGameByGameId) Descriptor() ([]byte, []int) {
	return file_proto_protos_game_winner_proto_rawDescGZIP(), []int{0}
}

func (x *GetWinnerGameByGameId) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

type UpdateTotalPaidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId    string `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	TotalPaid string `protobuf:"bytes,2,opt,name=total_paid,json=totalPaid,proto3" json:"total_paid,omitempty"`
}

func (x *UpdateTotalPaidRequest) Reset() {
	*x = UpdateTotalPaidRequest{}
	mi := &file_proto_protos_game_winner_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTotalPaidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTotalPaidRequest) ProtoMessage() {}

func (x *UpdateTotalPaidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_protos_game_winner_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTotalPaidRequest.ProtoReflect.Descriptor instead.
func (*UpdateTotalPaidRequest) Descriptor() ([]byte, []int) {
	return file_proto_protos_game_winner_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateTotalPaidRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *UpdateTotalPaidRequest) GetTotalPaid() string {
	if x != nil {
		return x.TotalPaid
	}
	return ""
}

type Winner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	GameId       string           `protobuf:"bytes,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	GameType     int32            `protobuf:"varint,3,opt,name=game_type,json=gameType,proto3" json:"game_type,omitempty"`
	Divisions    *DivisionResults `protobuf:"bytes,4,opt,name=divisions,proto3" json:"divisions,omitempty"`
	ResultNumber string           `protobuf:"bytes,5,opt,name=result_number,json=resultNumber,proto3" json:"result_number,omitempty"`
	Prize        uint32           `protobuf:"varint,6,opt,name=prize,proto3" json:"prize,omitempty"`
	Jackpot      bool             `protobuf:"varint,7,opt,name=jackpot,proto3" json:"jackpot,omitempty"`
	TotalPaid    *string          `protobuf:"bytes,8,opt,name=TotalPaid,proto3,oneof" json:"TotalPaid,omitempty"`
	CreatedAt    string           `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *Winner) Reset() {
	*x = Winner{}
	mi := &file_proto_protos_game_winner_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Winner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Winner) ProtoMessage() {}

func (x *Winner) ProtoReflect() protoreflect.Message {
	mi := &file_proto_protos_game_winner_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Winner.ProtoReflect.Descriptor instead.
func (*Winner) Descriptor() ([]byte, []int) {
	return file_proto_protos_game_winner_proto_rawDescGZIP(), []int{2}
}

func (x *Winner) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Winner) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *Winner) GetGameType() int32 {
	if x != nil {
		return x.GameType
	}
	return 0
}

func (x *Winner) GetDivisions() *DivisionResults {
	if x != nil {
		return x.Divisions
	}
	return nil
}

func (x *Winner) GetResultNumber() string {
	if x != nil {
		return x.ResultNumber
	}
	return ""
}

func (x *Winner) GetPrize() uint32 {
	if x != nil {
		return x.Prize
	}
	return 0
}

func (x *Winner) GetJackpot() bool {
	if x != nil {
		return x.Jackpot
	}
	return false
}

func (x *Winner) GetTotalPaid() string {
	if x != nil && x.TotalPaid != nil {
		return *x.TotalPaid
	}
	return ""
}

func (x *Winner) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type WinnerCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	GameId       string                `protobuf:"bytes,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	GameType     int32                 `protobuf:"varint,3,opt,name=game_type,json=gameType,proto3" json:"game_type,omitempty"`
	Divisions    *DivisionResultsCount `protobuf:"bytes,4,opt,name=divisions,proto3" json:"divisions,omitempty"`
	ResultNumber string                `protobuf:"bytes,5,opt,name=result_number,json=resultNumber,proto3" json:"result_number,omitempty"`
	Prize        uint32                `protobuf:"varint,6,opt,name=prize,proto3" json:"prize,omitempty"`
	Jackpot      bool                  `protobuf:"varint,7,opt,name=jackpot,proto3" json:"jackpot,omitempty"`
	TotalPaid    *string               `protobuf:"bytes,8,opt,name=TotalPaid,proto3,oneof" json:"TotalPaid,omitempty"`
	CreatedAt    string                `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *WinnerCount) Reset() {
	*x = WinnerCount{}
	mi := &file_proto_protos_game_winner_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WinnerCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WinnerCount) ProtoMessage() {}

func (x *WinnerCount) ProtoReflect() protoreflect.Message {
	mi := &file_proto_protos_game_winner_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WinnerCount.ProtoReflect.Descriptor instead.
func (*WinnerCount) Descriptor() ([]byte, []int) {
	return file_proto_protos_game_winner_proto_rawDescGZIP(), []int{3}
}

func (x *WinnerCount) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WinnerCount) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *WinnerCount) GetGameType() int32 {
	if x != nil {
		return x.GameType
	}
	return 0
}

func (x *WinnerCount) GetDivisions() *DivisionResultsCount {
	if x != nil {
		return x.Divisions
	}
	return nil
}

func (x *WinnerCount) GetResultNumber() string {
	if x != nil {
		return x.ResultNumber
	}
	return ""
}

func (x *WinnerCount) GetPrize() uint32 {
	if x != nil {
		return x.Prize
	}
	return 0
}

func (x *WinnerCount) GetJackpot() bool {
	if x != nil {
		return x.Jackpot
	}
	return false
}

func (x *WinnerCount) GetTotalPaid() string {
	if x != nil && x.TotalPaid != nil {
		return *x.TotalPaid
	}
	return ""
}

func (x *WinnerCount) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

var File_proto_protos_game_winner_proto protoreflect.FileDescriptor

var file_proto_protos_game_winner_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x67,
	0x61, 0x6d, 0x65, 0x2f, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x1a, 0x1e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x30, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x57, 0x69, 0x6e,
	0x6e, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x42, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x69, 0x64, 0x22, 0xa8, 0x02, 0x0a, 0x06, 0x57,
	0x69, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x33, 0x0a, 0x09, 0x64,
	0x69, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x44, 0x69, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x09, 0x64, 0x69, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x7a, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x72, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6a,
	0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6a, 0x61,
	0x63, 0x6b, 0x70, 0x6f, 0x74, 0x12, 0x21, 0x0a, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x50, 0x61, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x50, 0x61, 0x69, 0x64, 0x22, 0xb2, 0x02, 0x0a, 0x0b, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x64,
	0x69, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x44, 0x69, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x09, 0x64, 0x69, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x72, 0x69, 0x7a, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6a, 0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x6a, 0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74, 0x12, 0x21, 0x0a, 0x09, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x50, 0x61, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x69, 0x64, 0x32, 0xfc, 0x01, 0x0a, 0x0d, 0x57,
	0x69, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x42, 0x79, 0x47, 0x61, 0x6d, 0x65,
	0x49, 0x64, 0x12, 0x0c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x64,
	0x1a, 0x0c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x3a,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x42, 0x79, 0x47, 0x61,
	0x6d, 0x65, 0x49, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0c, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x2e, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x1a, 0x11, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x57,
	0x69, 0x6e, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x0f, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x69, 0x64, 0x12, 0x1c, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x50, 0x61, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3f, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4c,
	0x61, 0x73, 0x74, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x42, 0x79, 0x47, 0x61, 0x6d, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_protos_game_winner_proto_rawDescOnce sync.Once
	file_proto_protos_game_winner_proto_rawDescData = file_proto_protos_game_winner_proto_rawDesc
)

func file_proto_protos_game_winner_proto_rawDescGZIP() []byte {
	file_proto_protos_game_winner_proto_rawDescOnce.Do(func() {
		file_proto_protos_game_winner_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_protos_game_winner_proto_rawDescData)
	})
	return file_proto_protos_game_winner_proto_rawDescData
}

var file_proto_protos_game_winner_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_protos_game_winner_proto_goTypes = []any{
	(*GetWinnerGameByGameId)(nil),  // 0: game.GetWinnerGameByGameId
	(*UpdateTotalPaidRequest)(nil), // 1: game.UpdateTotalPaidRequest
	(*Winner)(nil),                 // 2: game.Winner
	(*WinnerCount)(nil),            // 3: game.WinnerCount
	(*DivisionResults)(nil),        // 4: game.DivisionResults
	(*DivisionResultsCount)(nil),   // 5: game.DivisionResultsCount
	(*GameId)(nil),                 // 6: game.GameId
	(*GameTypeRequest)(nil),        // 7: game.GameTypeRequest
	(*Empty)(nil),                  // 8: game.Empty
}
var file_proto_protos_game_winner_proto_depIdxs = []int32{
	4, // 0: game.Winner.divisions:type_name -> game.DivisionResults
	5, // 1: game.WinnerCount.divisions:type_name -> game.DivisionResultsCount
	6, // 2: game.WinnerService.GetWinnersByGameId:input_type -> game.GameId
	6, // 3: game.WinnerService.GetWinnersByGameIdCount:input_type -> game.GameId
	1, // 4: game.WinnerService.UpdateTotalPaid:input_type -> game.UpdateTotalPaidRequest
	7, // 5: game.WinnerService.GetLastWinnersByGameType:input_type -> game.GameTypeRequest
	2, // 6: game.WinnerService.GetWinnersByGameId:output_type -> game.Winner
	3, // 7: game.WinnerService.GetWinnersByGameIdCount:output_type -> game.WinnerCount
	8, // 8: game.WinnerService.UpdateTotalPaid:output_type -> game.Empty
	2, // 9: game.WinnerService.GetLastWinnersByGameType:output_type -> game.Winner
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_protos_game_winner_proto_init() }
func file_proto_protos_game_winner_proto_init() {
	if File_proto_protos_game_winner_proto != nil {
		return
	}
	file_proto_protos_game_common_proto_init()
	file_proto_protos_game_winner_proto_msgTypes[2].OneofWrappers = []any{}
	file_proto_protos_game_winner_proto_msgTypes[3].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_protos_game_winner_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_protos_game_winner_proto_goTypes,
		DependencyIndexes: file_proto_protos_game_winner_proto_depIdxs,
		MessageInfos:      file_proto_protos_game_winner_proto_msgTypes,
	}.Build()
	File_proto_protos_game_winner_proto = out.File
	file_proto_protos_game_winner_proto_rawDesc = nil
	file_proto_protos_game_winner_proto_goTypes = nil
	file_proto_protos_game_winner_proto_depIdxs = nil
}
