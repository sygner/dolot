// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.29.3
// source: proto/protos/common.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum for GameType
type GameType int32

const (
	GameType_LOTTO              GameType = 0
	GameType_OZLOTTO            GameType = 1
	GameType_POWERBALL          GameType = 2
	GameType_AMERICAN_POWERBALL GameType = 3
)

// Enum value maps for GameType.
var (
	GameType_name = map[int32]string{
		0: "LOTTO",
		1: "OZLOTTO",
		2: "POWERBALL",
		3: "AMERICAN_POWERBALL",
	}
	GameType_value = map[string]int32{
		"LOTTO":              0,
		"OZLOTTO":            1,
		"POWERBALL":          2,
		"AMERICAN_POWERBALL": 3,
	}
)

func (x GameType) Enum() *GameType {
	p := new(GameType)
	*p = x
	return p
}

func (x GameType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_protos_common_proto_enumTypes[0].Descriptor()
}

func (GameType) Type() protoreflect.EnumType {
	return &file_proto_protos_common_proto_enumTypes[0]
}

func (x GameType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameType.Descriptor instead.
func (GameType) EnumDescriptor() ([]byte, []int) {
	return file_proto_protos_common_proto_rawDescGZIP(), []int{0}
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_proto_protos_common_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_protos_common_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_proto_protos_common_proto_rawDescGZIP(), []int{0}
}

type GameId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId string `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
}

func (x *GameId) Reset() {
	*x = GameId{}
	mi := &file_proto_protos_common_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameId) ProtoMessage() {}

func (x *GameId) ProtoReflect() protoreflect.Message {
	mi := &file_proto_protos_common_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameId.ProtoReflect.Descriptor instead.
func (*GameId) Descriptor() ([]byte, []int) {
	return file_proto_protos_common_proto_rawDescGZIP(), []int{1}
}

func (x *GameId) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset   int32 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit    int32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	GetTotal bool  `protobuf:"varint,3,opt,name=get_total,json=getTotal,proto3" json:"get_total,omitempty"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	mi := &file_proto_protos_common_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_proto_protos_common_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_proto_protos_common_proto_rawDescGZIP(), []int{2}
}

func (x *Pagination) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *Pagination) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Pagination) GetGetTotal() bool {
	if x != nil {
		return x.GetTotal
	}
	return false
}

type GameTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameType GameType `protobuf:"varint,1,opt,name=game_type,json=gameType,proto3,enum=game.GameType" json:"game_type,omitempty"`
	Limit    int32    `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GameTypeRequest) Reset() {
	*x = GameTypeRequest{}
	mi := &file_proto_protos_common_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameTypeRequest) ProtoMessage() {}

func (x *GameTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_protos_common_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameTypeRequest.ProtoReflect.Descriptor instead.
func (*GameTypeRequest) Descriptor() ([]byte, []int) {
	return file_proto_protos_common_proto_rawDescGZIP(), []int{3}
}

func (x *GameTypeRequest) GetGameType() GameType {
	if x != nil {
		return x.GameType
	}
	return GameType_LOTTO
}

func (x *GameTypeRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type UserId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *UserId) Reset() {
	*x = UserId{}
	mi := &file_proto_protos_common_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserId) ProtoMessage() {}

func (x *UserId) ProtoReflect() protoreflect.Message {
	mi := &file_proto_protos_common_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserId.ProtoReflect.Descriptor instead.
func (*UserId) Descriptor() ([]byte, []int) {
	return file_proto_protos_common_proto_rawDescGZIP(), []int{4}
}

func (x *UserId) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type UserChoiceResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId            int32   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ChosesNumbers     []int32 `protobuf:"varint,2,rep,packed,name=choses_numbers,json=chosesNumbers,proto3" json:"choses_numbers,omitempty"`
	ChosenBonusNumber []int32 `protobuf:"varint,3,rep,packed,name=chosen_bonus_number,json=chosenBonusNumber,proto3" json:"chosen_bonus_number,omitempty"`
	BoughtPrice       float32 `protobuf:"fixed32,6,opt,name=bought_price,json=boughtPrice,proto3" json:"bought_price,omitempty"`
	MatchCount        []int32 `protobuf:"varint,4,rep,packed,name=match_count,json=matchCount,proto3" json:"match_count,omitempty"`
}

func (x *UserChoiceResult) Reset() {
	*x = UserChoiceResult{}
	mi := &file_proto_protos_common_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserChoiceResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserChoiceResult) ProtoMessage() {}

func (x *UserChoiceResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_protos_common_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserChoiceResult.ProtoReflect.Descriptor instead.
func (*UserChoiceResult) Descriptor() ([]byte, []int) {
	return file_proto_protos_common_proto_rawDescGZIP(), []int{5}
}

func (x *UserChoiceResult) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserChoiceResult) GetChosesNumbers() []int32 {
	if x != nil {
		return x.ChosesNumbers
	}
	return nil
}

func (x *UserChoiceResult) GetChosenBonusNumber() []int32 {
	if x != nil {
		return x.ChosenBonusNumber
	}
	return nil
}

func (x *UserChoiceResult) GetBoughtPrice() float32 {
	if x != nil {
		return x.BoughtPrice
	}
	return 0
}

func (x *UserChoiceResult) GetMatchCount() []int32 {
	if x != nil {
		return x.MatchCount
	}
	return nil
}

type UserChoiceResultDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId            int32    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ChosenMainNumber  []int32  `protobuf:"varint,2,rep,packed,name=ChosenMainNumber,proto3" json:"ChosenMainNumber,omitempty"`
	ChosenBonusNumber int32    `protobuf:"varint,3,opt,name=chosen_bonus_number,json=chosenBonusNumber,proto3" json:"chosen_bonus_number,omitempty"`
	MatchCount        int32    `protobuf:"varint,4,opt,name=match_count,json=matchCount,proto3" json:"match_count,omitempty"`
	BoughtPrice       float32  `protobuf:"fixed32,5,opt,name=bought_price,json=boughtPrice,proto3" json:"bought_price,omitempty"`
	WonPrize          *float32 `protobuf:"fixed32,6,opt,name=won_prize,json=wonPrize,proto3,oneof" json:"won_prize,omitempty"`
}

func (x *UserChoiceResultDetail) Reset() {
	*x = UserChoiceResultDetail{}
	mi := &file_proto_protos_common_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserChoiceResultDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserChoiceResultDetail) ProtoMessage() {}

func (x *UserChoiceResultDetail) ProtoReflect() protoreflect.Message {
	mi := &file_proto_protos_common_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserChoiceResultDetail.ProtoReflect.Descriptor instead.
func (*UserChoiceResultDetail) Descriptor() ([]byte, []int) {
	return file_proto_protos_common_proto_rawDescGZIP(), []int{6}
}

func (x *UserChoiceResultDetail) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserChoiceResultDetail) GetChosenMainNumber() []int32 {
	if x != nil {
		return x.ChosenMainNumber
	}
	return nil
}

func (x *UserChoiceResultDetail) GetChosenBonusNumber() int32 {
	if x != nil {
		return x.ChosenBonusNumber
	}
	return 0
}

func (x *UserChoiceResultDetail) GetMatchCount() int32 {
	if x != nil {
		return x.MatchCount
	}
	return 0
}

func (x *UserChoiceResultDetail) GetBoughtPrice() float32 {
	if x != nil {
		return x.BoughtPrice
	}
	return 0
}

func (x *UserChoiceResultDetail) GetWonPrize() float32 {
	if x != nil && x.WonPrize != nil {
		return *x.WonPrize
	}
	return 0
}

type DivisionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Division   string                    `protobuf:"bytes,1,opt,name=division,proto3" json:"division,omitempty"`
	MatchCount int32                     `protobuf:"varint,2,opt,name=match_count,json=matchCount,proto3" json:"match_count,omitempty"`
	HasBonus   bool                      `protobuf:"varint,3,opt,name=has_bonus,json=hasBonus,proto3" json:"has_bonus,omitempty"`
	UserChoice []*UserChoiceResultDetail `protobuf:"bytes,4,rep,name=user_choice,json=userChoice,proto3" json:"user_choice,omitempty"`
}

func (x *DivisionResult) Reset() {
	*x = DivisionResult{}
	mi := &file_proto_protos_common_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DivisionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DivisionResult) ProtoMessage() {}

func (x *DivisionResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_protos_common_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DivisionResult.ProtoReflect.Descriptor instead.
func (*DivisionResult) Descriptor() ([]byte, []int) {
	return file_proto_protos_common_proto_rawDescGZIP(), []int{7}
}

func (x *DivisionResult) GetDivision() string {
	if x != nil {
		return x.Division
	}
	return ""
}

func (x *DivisionResult) GetMatchCount() int32 {
	if x != nil {
		return x.MatchCount
	}
	return 0
}

func (x *DivisionResult) GetHasBonus() bool {
	if x != nil {
		return x.HasBonus
	}
	return false
}

func (x *DivisionResult) GetUserChoice() []*UserChoiceResultDetail {
	if x != nil {
		return x.UserChoice
	}
	return nil
}

type DivisionResults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DivisionResults []*DivisionResult `protobuf:"bytes,1,rep,name=division_results,json=divisionResults,proto3" json:"division_results,omitempty"`
}

func (x *DivisionResults) Reset() {
	*x = DivisionResults{}
	mi := &file_proto_protos_common_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DivisionResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DivisionResults) ProtoMessage() {}

func (x *DivisionResults) ProtoReflect() protoreflect.Message {
	mi := &file_proto_protos_common_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DivisionResults.ProtoReflect.Descriptor instead.
func (*DivisionResults) Descriptor() ([]byte, []int) {
	return file_proto_protos_common_proto_rawDescGZIP(), []int{8}
}

func (x *DivisionResults) GetDivisionResults() []*DivisionResult {
	if x != nil {
		return x.DivisionResults
	}
	return nil
}

type DivisionResultCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Division   string `protobuf:"bytes,1,opt,name=division,proto3" json:"division,omitempty"`
	MatchCount int32  `protobuf:"varint,2,opt,name=match_count,json=matchCount,proto3" json:"match_count,omitempty"`
	HasBonus   bool   `protobuf:"varint,3,opt,name=has_bonus,json=hasBonus,proto3" json:"has_bonus,omitempty"`
	Count      int32  `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *DivisionResultCount) Reset() {
	*x = DivisionResultCount{}
	mi := &file_proto_protos_common_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DivisionResultCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DivisionResultCount) ProtoMessage() {}

func (x *DivisionResultCount) ProtoReflect() protoreflect.Message {
	mi := &file_proto_protos_common_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DivisionResultCount.ProtoReflect.Descriptor instead.
func (*DivisionResultCount) Descriptor() ([]byte, []int) {
	return file_proto_protos_common_proto_rawDescGZIP(), []int{9}
}

func (x *DivisionResultCount) GetDivision() string {
	if x != nil {
		return x.Division
	}
	return ""
}

func (x *DivisionResultCount) GetMatchCount() int32 {
	if x != nil {
		return x.MatchCount
	}
	return 0
}

func (x *DivisionResultCount) GetHasBonus() bool {
	if x != nil {
		return x.HasBonus
	}
	return false
}

func (x *DivisionResultCount) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type DivisionResultsCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DivisionResultsCount []*DivisionResultCount `protobuf:"bytes,1,rep,name=division_results_count,json=divisionResultsCount,proto3" json:"division_results_count,omitempty"`
}

func (x *DivisionResultsCount) Reset() {
	*x = DivisionResultsCount{}
	mi := &file_proto_protos_common_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DivisionResultsCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DivisionResultsCount) ProtoMessage() {}

func (x *DivisionResultsCount) ProtoReflect() protoreflect.Message {
	mi := &file_proto_protos_common_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DivisionResultsCount.ProtoReflect.Descriptor instead.
func (*DivisionResultsCount) Descriptor() ([]byte, []int) {
	return file_proto_protos_common_proto_rawDescGZIP(), []int{10}
}

func (x *DivisionResultsCount) GetDivisionResultsCount() []*DivisionResultCount {
	if x != nil {
		return x.DivisionResultsCount
	}
	return nil
}

var File_proto_protos_common_proto protoreflect.FileDescriptor

var file_proto_protos_common_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x67, 0x61, 0x6d,
	0x65, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x21, 0x0a, 0x06, 0x47, 0x61,
	0x6d, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x57, 0x0a,
	0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x65, 0x74,
	0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x67, 0x65,
	0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x54, 0x0a, 0x0f, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x09, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x67, 0x61,
	0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x21, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0xc6, 0x01, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a,
	0x0e, 0x63, 0x68, 0x6f, 0x73, 0x65, 0x73, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x68, 0x6f, 0x73, 0x65, 0x73, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x68, 0x6f, 0x73, 0x65, 0x6e, 0x5f, 0x62,
	0x6f, 0x6e, 0x75, 0x73, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x11, 0x63, 0x68, 0x6f, 0x73, 0x65, 0x6e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6f, 0x75, 0x67, 0x68, 0x74, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x62, 0x6f, 0x75, 0x67,
	0x68, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x81, 0x02, 0x0a, 0x16, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10,
	0x43, 0x68, 0x6f, 0x73, 0x65, 0x6e, 0x4d, 0x61, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x10, 0x43, 0x68, 0x6f, 0x73, 0x65, 0x6e, 0x4d, 0x61,
	0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x68, 0x6f, 0x73,
	0x65, 0x6e, 0x5f, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x63, 0x68, 0x6f, 0x73, 0x65, 0x6e, 0x42, 0x6f, 0x6e,
	0x75, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6f, 0x75,
	0x67, 0x68, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0b, 0x62, 0x6f, 0x75, 0x67, 0x68, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x09,
	0x77, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x48,
	0x00, 0x52, 0x08, 0x77, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x77, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x7a, 0x65, 0x22, 0xa9, 0x01, 0x0a,
	0x0e, 0x44, 0x69, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x69, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x69, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x68, 0x61, 0x73, 0x5f, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x68, 0x61, 0x73, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x3d, 0x0a, 0x0b, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0a, 0x75, 0x73,
	0x65, 0x72, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x22, 0x52, 0x0a, 0x0f, 0x44, 0x69, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x3f, 0x0a, 0x10, 0x64,
	0x69, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x44, 0x69, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0f, 0x64, 0x69, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x85, 0x01, 0x0a,
	0x13, 0x44, 0x69, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x61, 0x73, 0x5f, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x68, 0x61, 0x73, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x67, 0x0a, 0x14, 0x44, 0x69, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4f, 0x0a, 0x16,
	0x64, 0x69, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x2e, 0x44, 0x69, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x14, 0x64, 0x69, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x2a, 0x49, 0x0a,
	0x08, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x4f, 0x54,
	0x54, 0x4f, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x5a, 0x4c, 0x4f, 0x54, 0x54, 0x4f, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x42, 0x41, 0x4c, 0x4c, 0x10, 0x02,
	0x12, 0x16, 0x0a, 0x12, 0x41, 0x4d, 0x45, 0x52, 0x49, 0x43, 0x41, 0x4e, 0x5f, 0x50, 0x4f, 0x57,
	0x45, 0x52, 0x42, 0x41, 0x4c, 0x4c, 0x10, 0x03, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_protos_common_proto_rawDescOnce sync.Once
	file_proto_protos_common_proto_rawDescData = file_proto_protos_common_proto_rawDesc
)

func file_proto_protos_common_proto_rawDescGZIP() []byte {
	file_proto_protos_common_proto_rawDescOnce.Do(func() {
		file_proto_protos_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_protos_common_proto_rawDescData)
	})
	return file_proto_protos_common_proto_rawDescData
}

var file_proto_protos_common_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_protos_common_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_proto_protos_common_proto_goTypes = []any{
	(GameType)(0),                  // 0: game.GameType
	(*Empty)(nil),                  // 1: game.Empty
	(*GameId)(nil),                 // 2: game.GameId
	(*Pagination)(nil),             // 3: game.Pagination
	(*GameTypeRequest)(nil),        // 4: game.GameTypeRequest
	(*UserId)(nil),                 // 5: game.UserId
	(*UserChoiceResult)(nil),       // 6: game.UserChoiceResult
	(*UserChoiceResultDetail)(nil), // 7: game.UserChoiceResultDetail
	(*DivisionResult)(nil),         // 8: game.DivisionResult
	(*DivisionResults)(nil),        // 9: game.DivisionResults
	(*DivisionResultCount)(nil),    // 10: game.DivisionResultCount
	(*DivisionResultsCount)(nil),   // 11: game.DivisionResultsCount
}
var file_proto_protos_common_proto_depIdxs = []int32{
	0,  // 0: game.GameTypeRequest.game_type:type_name -> game.GameType
	7,  // 1: game.DivisionResult.user_choice:type_name -> game.UserChoiceResultDetail
	8,  // 2: game.DivisionResults.division_results:type_name -> game.DivisionResult
	10, // 3: game.DivisionResultsCount.division_results_count:type_name -> game.DivisionResultCount
	4,  // [4:4] is the sub-list for method output_type
	4,  // [4:4] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_proto_protos_common_proto_init() }
func file_proto_protos_common_proto_init() {
	if File_proto_protos_common_proto != nil {
		return
	}
	file_proto_protos_common_proto_msgTypes[6].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_protos_common_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_protos_common_proto_goTypes,
		DependencyIndexes: file_proto_protos_common_proto_depIdxs,
		EnumInfos:         file_proto_protos_common_proto_enumTypes,
		MessageInfos:      file_proto_protos_common_proto_msgTypes,
	}.Build()
	File_proto_protos_common_proto = out.File
	file_proto_protos_common_proto_rawDesc = nil
	file_proto_protos_common_proto_goTypes = nil
	file_proto_protos_common_proto_depIdxs = nil
}
